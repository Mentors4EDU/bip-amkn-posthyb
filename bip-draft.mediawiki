<pre>
  BIP: amkn-posthyb
  Title: Consensus (Hard Fork) PoST Datastore for Advanced Cryptography and Higher Efficiency Mining
  Author: Andrew M. K. Nassief <loneroassociation@gmail.com>
  Comments-Summary: General interests and concerns, community has been looking into more details
  Comments-URI: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-March/018571.html
  Status: Active
  Type: Draft
  Created: 2021-03-04
  License: MIT | zlib | OPNL-2 | CC BY 4.0
  Replaces: N/A
</pre>

==Abstract==
This BIP aims to provide a more complex cryptography alternative to Bitcoin's traditional encryption scheme. It also specifies a hybrid consensus for allowing both traditional POW and memory hard hashing. The aim is for more optimized cryptographic efficiency and sustainable security in the future.

==Copyright==
'''License(s)''': MIT | zlib | OPNL-2 | CC BY 4.0
<br>
<br>
Â© 2021 Andrew M. K. Nassief

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
End license text.

===BIP Editor and Responsibilities===
The current BIP editor/champion of this proposal '''(the actual author)''' will be responsible for the following:
# Updating the BIP over time
# Advocating for needed updates and changes
# Communicating and commenting on community concerns
# Leading the implementation and development of the proposed BIP

==Specification==

===Motivation===
The purpose of this proposal is primarily related to Bitcoin's hashing algorithm and cryptography. The idea is centered around an improvement on hashing efficiency and better security. The aim is for mining to be compatible the way that it currently is, as well as memory hard compatibility as well. Besides memory hard or ''proof of space and time'' compatibility, there is another reason that integration needs to be implemented. This includes a cryptographic proof for NP completeness as how to best avoid a significant complexity cracking in the future or a cryptographic attack vector. Nonetheless, Bitcoin's  level of cryptography needs to significantly change in order for Bitcoin to be decentralized and relavant in the future. Significant worries such as Post-Classical Computing i.e Quantum Computing, the solving of the P vs. NP or other threats are posed for Bitcoin's sustainable future. Tackling many of these threats can better be instigated with the cryptographic proofs and systems I believe could be of value.

===Rationale=== 
In regards to cryptographic hashing, an advancement beyond Satoshi's chosen secp256k1 algorithm needs to happen in regards to sustainable security for the near future. This is in part due to the fact that the elliptic curve encryption chosen is very susceptible to break. I believe an asymmetric cryptography algorithm can be better optimized for polynomial time complexity such as an NP hardness encryption scheme possibly based off of Homomorphic encryption, or some sort of regressional model that can be more prominent in the future. 

As stated prior, post-classical computing and potential unsolved mathematical theorems becoming solved, pose a huge threat to breaking Bitcoin's current encryption scheme on many levels. Outside of this implementation, I also believe the hashing algorithm can be modified to allow mining the way it is currently done, as well as be more compatible for memory hard hashing functions. An implementation of a hybrid PoST ''(Proof of Space and Time)'' algorithm and traditional POW ''(Proof of Work)'' is more suited for modern day cryptocurrency mining. While memory-hard hardware might be comparable to the costs of ASIC specific hardware in regards to mining efficiency, this new implementation is more related to expanding the infrastructure available for mining Bitcoin. 

Outside of hardware availability, is also a need for an algorithm to be optimized towards less invalidated blocks. This will be feasible with complex data store functionalities.

==Reference implementation==

==See Also==

===Acknowledgements===
